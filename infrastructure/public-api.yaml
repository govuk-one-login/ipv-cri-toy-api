openapi: "3.0.1"
info:
  title: "Toy Credential Issuer Public Api"
  version: "1.0"

paths:
  /token:
    post:
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - "grant_type"
                - "code"
                - "client_assertion_type"
                - "client_assertion"
                - "redirect_uri"
              properties:
                grant_type:
                  type: "string"
                  pattern: "authorization_code"
                  example: "authorization_code"
                code:
                  type: "string"
                  minLength: 1
                client_assertion_type:
                  type: "string"
                  pattern: "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
                  example: "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
                client_assertion:
                  type: "string"
                  pattern: "[a-zA-Z0-9_=]+\\.[a-zA-Z0-9_=]+\\.[a-zA-Z0-9_\\-\\+\\/=]+"
                redirect_uri:
                  type: "string"
                  format: "uri"
                  example: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
            examples:
              201:
                summary: "Example body to receive a HTTP 201 response"
                value:
                  grant_type: "string"
                  code: "1fbc5730-9d17-416d-b2ca-0be90e1e93f5"
                  client_assertion_type: "string"
                  client_assertion: "string"
                  redirect_uri: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
              400:
                summary: "Example body to receive a HTTP 400 response"
                value:
                  grant_type: "string"
                  code: "fad21bea-bce9-4aa7-8889-d50c7d26616e"
                  client_assertion_type: "string"
                  client_assertion: "string"
                  redirect_uri: "string"
              500:
                summary: "Example body to receive a HTTP 500 response"
                value:
                  grant_type: "string"
                  code: "f27b8afc-90ef-4e0f-83ad-00a2f5692590"
                  client_assertion_type: "string"
                  client_assertion: "string"
                  redirect_uri: "string"
      responses:
        "201":
          description: "201 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
              examples:
                201:
                  value:
                    access_token: "1fbc5730-9d17-416d-b2ca-0be90e1e93f5"
                    token_type: "Bearer"
                    expires_in: "3600"
                    refresh_token: "uuid"
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - api_key:
            Fn::If:
              - IsLocalDevEnvironment
              - Ref: AWS::NoValue
              - []
      x-amazon-apigateway-request-validator: "Validate both"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${CommonStackName}-AccessTokenFunctionTS/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /credential/issue:
    post:
      summary: "Resource for the KBV API"
      description: "This API is expected to be called by the IPV core backend directly as the final part of the OpenID/OAuth Flow"
      parameters:
        - in: header
          name: Authorization
          description: "Authorization: Bearer access-token-value"
          schema:
            type: string
            format: string
          required: true
          examples:
            200:
              summary: "An example of a good header"
              value: "Bearer 1fbc5730-9d17-416d-b2ca-0be90e1e93f5"
      responses:
        "200":
          description: 200 OK
          content:
            application/jwt:
              schema:
                type: string
                format: application/jwt
                pattern: ^([a-zA-Z0-9_=]+)\.([a-zA-Z0-9_=]+)\.([a-zA-Z0-9_\-\+\/=]+)$
        "400":
          description: 400 Bad Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - api_key:
            Fn::If:
              - IsLocalDevEnvironment
              - Ref: AWS::NoValue
              - []
      x-amazon-apigateway-request-validator: "Validate both"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IssueCredentialFunction.Arn}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"

components:
  schemas:
    TokenResponse:
      title: "AccessToken"
      required:
        - "access_token"
        - "expires_in"
      type: "object"
      properties:
        access_token:
          type: string
          description: "The access token for the given token request"
        token_type:
          type: string
          description: "The authentication scheme"
          example: Bearer
        expires_in:
          type: string
          description: "The token expiration time in seconds"
          example: "3600"
        refresh_token:
          type: string
          description: "The refresh token is optional and not currently applicable"
    Error:
      title: "Error Schema"
      type: "object"
      properties:
        message:
          type: "string"

  securitySchemes:
    api_key:
      type: "apiKey"
      name: "x-api-key"
      in: "header"

x-amazon-apigateway-request-validators:
  Validate both:
    validateRequestBody: true
    validateRequestParameters: true
  Validate Param only:
    validateRequestParameters: true
    validateRequestBody: false
